<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2020-01-08 18:33:13                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoCreditor extends NamedObject implements Created, SecurityObject
	{
		protected $createdTime = null;
		protected $type = null;
		protected $typeId = null;
		protected $user = null;
		protected $userId = null;
		protected $active = false;
		protected $deleted = false;
		protected $categories = null;
		
		/**
		 * @return Timestamp
		**/
		public function getCreatedTime()
		{
			return $this->createdTime;
		}
		
		/**
		 * @return Creditor
		**/
		public function setCreatedTime(Timestamp $createdTime)
		{
			$this->createdTime = $createdTime;
			
			return $this;
		}
		
		/**
		 * @return Creditor
		**/
		public function dropCreatedTime()
		{
			$this->createdTime = null;
			
			return $this;
		}
		
		/**
		 * @return SubjectType
		**/
		public function getType()
		{
			if (!$this->type && $this->typeId) {
				$this->type = new SubjectType($this->typeId);
			}
			
			return $this->type;
		}
		
		public function getTypeId()
		{
			return $this->type
				? $this->type->getId()
				: $this->typeId;
		}
		
		/**
		 * @return Creditor
		**/
		public function setType(SubjectType $type)
		{
			$this->type = $type;
			$this->typeId = $type ? $type->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Creditor
		**/
		public function setTypeId($id)
		{
			$this->type = null;
			$this->typeId = $id;
			
			return $this;
		}
		
		/**
		 * @return Creditor
		**/
		public function dropType()
		{
			$this->type = null;
			$this->typeId = null;
			
			return $this;
		}
		
		/**
		 * @return User
		**/
		public function getUser()
		{
			if (!$this->user && $this->userId) {
				$this->user = User::dao()->getById($this->userId);
			}
			
			return $this->user;
		}
		
		public function getUserId()
		{
			return $this->user
				? $this->user->getId()
				: $this->userId;
		}
		
		/**
		 * @return Creditor
		**/
		public function setUser(User $user)
		{
			$this->user = $user;
			$this->userId = $user ? $user->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Creditor
		**/
		public function setUserId($id)
		{
			$this->user = null;
			$this->userId = $id;
			
			return $this;
		}
		
		/**
		 * @return Creditor
		**/
		public function dropUser()
		{
			$this->user = null;
			$this->userId = null;
			
			return $this;
		}
		
		public function getActive()
		{
			return $this->active;
		}
		
		public function isActive()
		{
			return $this->active;
		}
		
		/**
		 * @return Creditor
		**/
		public function setActive($active = false)
		{
			$this->active = ($active === true);
			
			return $this;
		}
		
		public function getDeleted()
		{
			return $this->deleted;
		}
		
		public function isDeleted()
		{
			return $this->deleted;
		}
		
		/**
		 * @return Creditor
		**/
		public function setDeleted($deleted = false)
		{
			$this->deleted = ($deleted === true);
			
			return $this;
		}
		
		/**
		 * @return CreditorCategoriesDAO
		**/
		public function getCategories($lazy = false)
		{
			if (!$this->categories || ($this->categories->isLazy() != $lazy)) {
				$this->categories = new CreditorCategoriesDAO($this, $lazy);
			}
			
			return $this->categories;
		}
		
		/**
		 * @return Creditor
		**/
		public function fillCategories($collection, $lazy = false)
		{
			$this->categories = new CreditorCategoriesDAO($this, $lazy);
			
			if (!$this->id) {
				throw new WrongStateException(
					'i do not know which object i belong to'
				);
			}
			
			$this->categories->mergeList($collection);
			
			return $this;
		}
	}
?>