<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2020-01-05 14:55:03                    *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/

	final class AclGroupDAO extends AutoAclGroupDAO
	{
            /**
             * использовать только для работы с $sectionId
             * @see SecurityManager::isAllowedAction()
             *
             * @param int $groupId
             * @param string $actionLabel
             * @param int $contextId
             * @param int $sectionId
             * @return bool
             */
            public static function isAllowedAction($groupId, $actionLabel, $contextId, $sectionId)
            {
                $criteria = Criteria::create(AclGroupRight::dao())->
                    setProjection(Projection::property('group.id'))->
                    setSilent(true)->
                    add(
                        Expression::andBlock(
                            Expression::eq('group', $groupId),
                            Expression::eq('right.action.action', $actionLabel),
                            Expression::eq('right.context.id', $contextId)
                        )
                    )->
                    setLimit(1);

                /**
                 * @todo для статей и фотографий
                 * PATH = ArticleRubric::getById()->getPath()
                 * where section_id in (select id from article_rubric where path>@PATH)
                 */
                $criteria->add(Expression::eq('right.sectionId', $sectionId));

                return !is_null($criteria->getCustom());
            }
            
            public static function getAllowedContextSectionList($groupId, $actionLabel, $contextId)
            {
                $criteria = Criteria::create(AclGroupRight::dao())->
                    setProjection(Projection::property('right.sectionId'))->
                    add(Expression::eq('group', $groupId))->
                    add(Expression::eq('right.action.action', $actionLabel))->
                    add(Expression::eq('right.context', $contextId))->
                    add(Expression::notNull('right.sectionId'))->
                    setSilent(true);
                
                $list = $criteria->getCustomList();
                
                return count($list) ? ArrayUtils::convertToPlainList($list, 'section_id') : array();
            }
	}